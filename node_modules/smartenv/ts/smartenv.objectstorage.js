/// <reference path="typings/main.d.ts" />
var plugins = require("./smartenv.plugins");
exports.obs = {
    add: function (paramNameArg, objectArg) {
        if (paramNameArg === void 0) { paramNameArg = "undefined"; }
        if (objectArg === void 0) { objectArg = "undefined"; }
        if (paramNameArg == "undefined") {
            console.log("paramName is undefined");
            return;
        }
        if (objectArg == "undefined") {
            console.log("objectArg is undefined");
        }
        if (typeof exports.obsItems[paramNameArg] === "undefined") {
            exports.obsItems[paramNameArg] = objectArg;
        }
        else {
            console.log("object is already present, so add operation has failed.");
        }
        return exports.obsItems[paramNameArg];
    },
    replace: function (paramNameArg, objectArg) {
        exports.obsItems[paramNameArg] = objectArg;
    },
    merge: function (paramNameArg, objectArg) {
        if (!(typeof exports.obsItems[paramNameArg] === "undefined")) {
            exports.obsItems[paramNameArg] = plugins._.assign(exports.obsItems[paramNameArg], objectArg);
        }
        else {
            console.log("object is not present, so there is nothing to merge");
        }
    },
    get: function (keyName) {
        return exports.obsItems[keyName];
    },
    getAll: function () {
        return exports.obsItems;
    },
    addComplete: function (itemsArg) {
        exports.obsItems = plugins._.assign(exports.obsItems, itemsArg);
        return exports.obsItems;
    }
};
exports.obsItems = {};
//# sourceMappingURL=smartenv.objectstorage.js.map