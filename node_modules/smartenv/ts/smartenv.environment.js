var classes = require("./smartenv.classes");
var objectStorage = require("./smartenv.objectstorage");
var environment;
var envDetermined = false;
/**
 * returns the environment
 * @returns {Environment}
 */
exports.getEnv = function () {
    if (!envDetermined) {
        environment = new classes.Environment();
        envDetermined = true; // ensure code above only runs once
    }
    ;
    return environment;
};
/**
 * prints the environment to console
 */
exports.printEnv = function () {
    if (this.getEnv().isNode) {
        console.log("running on NODE");
        var smartenvVersion = require("../package.json").version;
        console.log("node version is " + this.getEnv().nodeVersion + " and smartenv version is " + smartenvVersion);
    }
    else {
        console.log("running on BROWSER");
        console.log("browser is " + this.getEnv().userAgent);
    }
    console.log("the smartenv registration store currently holds the following properties:");
    console.log(Object.getOwnPropertyNames(objectStorage.obs.getAll()));
};
//# sourceMappingURL=smartenv.environment.js.map